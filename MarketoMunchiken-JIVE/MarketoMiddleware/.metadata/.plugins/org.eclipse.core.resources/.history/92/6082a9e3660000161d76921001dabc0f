package dev.marketo.samples.Leads;

//A simple Java Toolkit for JSON (https://code.google.com/p/json-simple/)


import javax.net.ssl.HttpsURLConnection;

import org.json.JSONArray;
import org.json.JSONObject;

import com.jcs.modal.ActivityMap;

import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.MalformedURLException;
import java.net.URL;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.NoSuchElementException;
import java.util.Scanner;
import java.util.TimeZone;

public class CustomActivities {


 public static void pushActivityLog(String leadid,List<ActivityMap> activitiesMap ) {
     String lead = new CustomActivities().addActivity();
     System.exit(0);
 }

 // Call Add Custom Activities API endpoint
 public String addActivity() {
	 Config config = new Config();
     String url = config.marketoInstance + "/rest/v1/activities/external.json?access_token=" + config.getToken();
     System.out.println(url);
     String result = addData(url);
     return result;
 }

 private String addData(String endpoint) {
     String data = null;
     try {
         // Construct request payload
         JSONObject attrObj=new JSONObject();
         
         // attributes value is pushed here 
         
         attrObj.put("name", "URL");
         attrObj.put("value", "http://www.nvidia.com/game-giveaway");

         JSONArray attrArray = new JSONArray();
         attrArray.put(attrObj);

         TimeZone tz = TimeZone.getTimeZone("UTC");
         DateFormat df = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm'Z'");
         df.setTimeZone(tz);
         String dateAsISO = df.format(new Date());

         // Required attributes
         JSONObject obj=new JSONObject();
         
         obj.put("leadId", "21");
         obj.put("activityDate", dateAsISO);
         obj.put("activityTypeId", "1001");
         obj.put("primaryAttributeValue","Game Giveaway");
         obj.put("attributes", attrArray);
         System.out.println(obj);

         // Make request
         URL url = new URL(endpoint);
         HttpsURLConnection urlConn = (HttpsURLConnection) url.openConnection();
         urlConn.setRequestMethod("POST");
         urlConn.setAllowUserInteraction(false);
         urlConn.setDoOutput(true);
         urlConn.setRequestProperty("Content-type", "application/json");
         urlConn.setRequestProperty("accept", "application/json");
         urlConn.connect();
         OutputStream os = urlConn.getOutputStream();
         os.write(obj.toString().getBytes());
         os.close();

         // Inspect response
         int responseCode = urlConn.getResponseCode();
         if (responseCode == 200) {
             System.out.println("Status: 200");
             InputStream inStream = urlConn.getInputStream();
             data = convertStreamToString(inStream);
             System.out.println(data);
         } else {
             System.out.println(responseCode);
             data = "Status:" + responseCode;
         }
     } catch (MalformedURLException e) {
         System.out.println("URL not valid.");
     } catch (IOException e) {
         System.out.println("IOException: " + e.getMessage());
         e.printStackTrace();
     }

     return data;
 }

 private String convertStreamToString(InputStream inputStream) {

     try {
         return new Scanner(inputStream).useDelimiter("\\A").next();
     } catch (NoSuchElementException e) {
         return "";
     }
 }
}