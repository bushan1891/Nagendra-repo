package dev.marketo.samples.Leads;

import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.Reader;
import java.io.UnsupportedEncodingException;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLEncoder;
import java.util.NoSuchElementException;
import java.util.Scanner;

import javax.net.ssl.HttpsURLConnection;

import com.eclipsesource.json.JsonObject;

//the Java sample code on dev.marketo.com uses the minimal-json package
//minimal-json provides easy and fast representations of JSON
//for more information check out https://github.com/ralfstx/minimal-json

public class AssociateLead {

	public int id; // id of the known lead to associate, required
	public String cookie; // cookie to associate, should be URLencoded, required

	public static String associateLead(String cooikeID, String leadID) {
		String result = new String();
		try {
			AssociateLead associate = new AssociateLead();
			associate.id = 1;
			associate.cookie = URLEncoder.encode(cooikeID, "UTF-8");
			result = associate.getData();
			System.out.println("********print at associateLead***********");
			System.out.println(result);
		} catch (UnsupportedEncodingException e) {
			e.printStackTrace();
		}

		return result;
	}

	// Make request
	private String getData() {
		Config config = new Config();
		String data = null;
		try {
			// Assemble the URL to retrieve data from
			String endpoint = config.marketoInstance + "/rest/v1/leads/" + id + "/associate.json?access_token="
					+ config.getToken() + "&cookie=" + cookie;
			URL url = new URL(endpoint);
			HttpsURLConnection urlConn = (HttpsURLConnection) url.openConnection();
			urlConn.setRequestMethod("POST");
			urlConn.setRequestProperty("Content-type", "application/json");
			urlConn.setRequestProperty("accept", "text/json");
			int responseCode = urlConn.getResponseCode();
			if (responseCode == 200) {
				InputStream inStream = urlConn.getInputStream();
				data = convertStreamToString(inStream);
			} else {
				data = "Status:" + responseCode;
			}
		} catch (MalformedURLException e) {
			System.out.println("URL not valid.");
		} catch (IOException e) {
			System.out.println("IOException: " + e.getMessage());
			e.printStackTrace();
		}

		return data;
	}

	private String convertStreamToString(InputStream inputStream) {

		try {
			return new Scanner(inputStream).useDelimiter("\\A").next();
		} catch (NoSuchElementException e) {
			return "";
		}
	}
}